// Hello World!

// 不動点コンビネータ (型検査器は未実装)
let fix f =
  let g x = f (fun y -> x x y) in
  g g

let fold_left f a l =
  fix
    (fun fold a l ->
      match l with
      | () -> a
      | hd . tl -> fold (f a hd) tl
    ) a l

// 文列の結合
let cat s1 s2 = [ *s1  *s2 ]

// 整数のリストを引数に取り、文字列を出力する文列を返す
let gen_puts str = [
  $alloc { cel; } in
  **let stmts, _ =
      fold_left
        (fun (stmts, prev) cha ->
          let out = [
            + cel (cha - prev)
            . cel
          ] in
          (cat stmts out, cha)
        ) ([], 0) str
    in
    stmts
]

codegen [ *gen_puts "Hello World!\n" ]